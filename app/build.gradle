plugins {
    id "com.android.application"
    id "com.apollographql.apollo3" version "3.1.0"
    id "kotlin-android"
    id "com.google.protobuf"
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "cn.copaint.audience"
        minSdkVersion 29
        targetSdkVersion 31
        versionCode 10
        versionName "1.1"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        debug {
            storeFile file("../Onyx-key.jks")
            storePassword "QnRdaSDjHSh87zCK"
            keyAlias "whiteboard-onyx"
            keyPassword "QnRdaSDjHSh87zCK"
        }
        release {
            storeFile file("../Onyx-key.jks")
            storePassword "QnRdaSDjHSh87zCK"
            keyAlias "whiteboard-onyx"
            keyPassword "QnRdaSDjHSh87zCK"
        }
    }

    viewBinding{
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

protobuf {
    protoc { if (osdetector.os == "osx") {
        artifact = 'com.google.protobuf:protoc:3.14.0:osx-x86_64'
    } else {
        artifact = 'com.google.protobuf:protoc:3.14.0'
    } }
    plugins {
        grpc { if (osdetector.os == "osx"){
            artifact = 'io.grpc:protoc-gen-grpc-java:1.35.0:osx-x86_64'
        }
        else{
            artifact = 'io.grpc:protoc-gen-grpc-java:1.35.0'
        }}
        grpckt { artifact = "io.grpc:protoc-gen-grpc-kotlin:1.1.0:jdk7@jar" }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc { option 'lite' }
                grpckt { option 'lite' }
            }
        }
    }
}

apollo {
    packageName.set("cn.copaint.audience")
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.6.10'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.5.0'

    // Bugsnag
    implementation "com.bugsnag:bugsnag-android:5.+"

    // GRPC Deps
    implementation "io.grpc:grpc-okhttp:1.37.0"
    implementation 'io.grpc:grpc-protobuf-lite:1.37.0'
    implementation 'io.grpc:grpc-kotlin-stub:1.1.0'
    implementation 'io.grpc:protoc-gen-grpc-kotlin:1.1.0'

    implementation "com.apollographql.apollo3:apollo-runtime:3.1.0"

    // ColorPicker
    implementation 'com.github.duanhong169:checkerboarddrawable:1.0.2'
    implementation 'com.github.g39088902:ColorPicker:591b38d'

    // AppUpdater
    implementation 'com.github.javiersantos:AppUpdater:2.7'

    // Authing
    implementation "cn.authing:java-core:4.3.48"

    // CircleImageview
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+' // 使用微信支付时添加,具体版本参考微信官方文档

    // PictureSelector basic (Necessary)
    implementation 'io.github.lucksiege:pictureselector:v3.0.5'

    // image compress library (Not necessary)
    implementation 'io.github.lucksiege:compress:v3.0.5'

    // uCrop library (Not necessary)
    implementation 'io.github.lucksiege:ucrop:v3.0.5'

    // simple camerax library (Not necessary)
    implementation 'io.github.lucksiege:camerax:v3.0.5'

    implementation "com.airbnb.android:lottie:5.0.3"
    // 高斯模糊
    implementation 'com.github.mmin18:realtimeblurview:1.2.1'
}
